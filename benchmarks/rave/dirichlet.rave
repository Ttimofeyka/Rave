import <std/io>

alias N = 150000000;

int[N + 1] spf;
int[N + 1] d;
int[N + 1] e;
int[N + 1] primes;

void main {
    ulong pcount = 0;
    
    d[1] = 1;
    e[1] = 0;
    spf[1] = 0;
    
    for(ulong i=2; i<=N; i++) {
        if(spf[i] == 0) {
            spf[i] = i;
            d[i] = 2;
            e[i] = 1;
            primes[pcount] = i;
            pcount += 1;
        }
        else {
            int p = spf[i];
            int j = i / p;
            if(spf[j] == p) {
                e[i] = e[j] + 1;
                d[i] = d[j] * (e[i] + 1) / (e[j] + 1);
            }
            else {
                e[i] = 1;
                d[i] = d[j] * 2;
            }
        }

        for(ulong j_index = 0; j_index < pcount; j_index++) {
            int p = primes[j_index];
            if((p > spf[i]) || (cast(long)p) * i > N) break;
            spf[p * i] = p;
        }
    }
    
    ulong total = 0;
    for(int i = 1; i <= N; i++) total += d[i];

    std::println(total);
}
