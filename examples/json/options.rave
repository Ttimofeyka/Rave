import <std/io> <std/json>

void main {
    std::file f = std::file("options.json");

    // Reading the file
    f.open("r");
    std::string buffer = f.readAll();
    defer ~buffer;
    f.close();

    // Parsing as json
    std::json::Value jvalue = std::json::parse(buffer);
    defer ~jvalue;

    // Checking
    std::json::Value* jobject = jvalue.pointer(); // Pointer with access to all elements by index
    std::println("List of existing elements:");
    for(int i=0; i<jvalue.length; i++) std::println("\t", jobject[i].name);

    // Let's print a value of "compiler" variable!
    std::json::Value compiler = jvalue.get("compiler");
    std::println("'compiler' is ", compiler.as<char*>(), "!"); // You can use .as<std::cstring>() or .as<std::string> too
}